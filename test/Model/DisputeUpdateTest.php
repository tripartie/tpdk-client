<?php
/**
 * DisputeUpdateTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Tripartie\Tpdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Tripartie
 *
 * Our API suite for the **Resolution Center** and the **Safe Checkout** features. Simple, yet elegant web interfaces for your convenience. One request away from your first automated resolution or safe-checkout.
 *
 * The version of the OpenAPI document: 2.0.167
 * Contact: noc@tripartie.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Tripartie\Tpdk\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * DisputeUpdateTest Class Doc Comment
 *
 * @category    Class
 * @description Access directly our resolution center without having used the safe-checkout feature.
 * @package     Tripartie\Tpdk
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class DisputeUpdateTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "DisputeUpdate"
     */
    public function testDisputeUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "itemCount"
     */
    public function testPropertyItemCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "issueType"
     */
    public function testPropertyIssueType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "issueInDescriptionType"
     */
    public function testPropertyIssueInDescriptionType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "issueMentionedInOffer"
     */
    public function testPropertyIssueMentionedInOffer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "issueDetails"
     */
    public function testPropertyIssueDetails()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "complainantStake"
     */
    public function testPropertyComplainantStake()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "chosenSolution"
     */
    public function testPropertyChosenSolution()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "chosenPartialRefundAmount"
     */
    public function testPropertyChosenPartialRefundAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "counterSolution"
     */
    public function testPropertyCounterSolution()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "counterPartialRefundAmount"
     */
    public function testPropertyCounterPartialRefundAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sellerNotes"
     */
    public function testPropertySellerNotes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sellerRejectionReason"
     */
    public function testPropertySellerRejectionReason()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "complainantApproval"
     */
    public function testPropertyComplainantApproval()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sellerApproval"
     */
    public function testPropertySellerApproval()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "platformSolution"
     */
    public function testPropertyPlatformSolution()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "platformPartialRefundAmount"
     */
    public function testPropertyPlatformPartialRefundAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "platformApproval"
     */
    public function testPropertyPlatformApproval()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "platformReasoning"
     */
    public function testPropertyPlatformReasoning()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
